{
    "componentChunkName": "component---src-templates-markdown-remark-js",
    "path": "/documentation/core/docs/intern-projects/classify-errors-produced-during-installation-of-python-modules.md",
    "result": {"data":{"site":{"siteMetadata":{"title":"Thoth Station Help"}},"markdownRemark":{"id":"b65d81fb-2bbe-500e-9c4a-6d3059288366","html":"<h1>Classify errors produced during installation of Python modules</h1>\n<p>Assigned intern: Bjoern Hasemann\nAssigned mentor: Frido Pokorny</p>\n<h2>Project Goal</h2>\n<p>The goal of this project is to create a classifier that can classify errors reported during Python package installation. This classifier will be used in thoth-solver errors classification as well as in build analysis.</p>\n<h2>Deliverables</h2>\n<p>A Jupyter Notebook, later an CLI application, that can automatically classify error logs.</p>\n<h2>Prerequisites for Team Members</h2>\n<p>Please check you have all the following:</p>\n<ul>\n<li>Access to Red Hat network</li>\n<li>Access to GMail and Google Chat\n<ul>\n<li>Be part of Thoth-Station Google Chat Room</li>\n</ul>\n</li>\n<li>Be part of Thoth scrum meetings\n<ul>\n<li>You should receive an invite to a Google calendar Event</li>\n</ul>\n</li>\n<li>Access to GitHub using your GitHub your account\n<ul>\n<li>Thoth Station</li>\n</ul>\n</li>\n<li>Get access to JupyterHub\n<ul>\n<li><a href=\"https://odh.operate-first.cloud/\">https://odh.operate-first.cloud/</a></li>\n</ul>\n</li>\n</ul>\n<h2>Project outline</h2>\n<ol>\n<li>Welcome to the Thoth Station!\n<ol>\n<li>get familiar with team members</li>\n</ol>\n</li>\n<li>Get familiar with thoth-solver [1], study its output</li>\n<li>Get familiar with micropipenv [2], study its output</li>\n<li>Get familiar with Amun service and inspections that are run there [4]</li>\n<li>Get access to solver dataset that is present on Ceph, explore the dataset using Jupyter Notebooks, create a batch of solver documents that capture failed solver runs with the error log reported\n<ol>\n<li>You can also check available datasets on Kaggle [3] and GitHub [4]</li>\n</ol>\n</li>\n<li>Similarly to the previous point, get access to inspection dataset</li>\n<li>Design and propose a solution that will automatically or semi-automatically classify errors, discuss the proposed solution with the team\n<ol>\n<li>Discuss algorithm used</li>\n<li>Discuss how the solution can be applied to solver errors and errors in inspection build logs</li>\n</ol>\n</li>\n<li>Create a generic Jupyter Notebook that accepts a list of solver documents and classifies them automatically\n<ol>\n<li>Check already implemented classifier, propose improvements or reuse parts</li>\n</ol>\n</li>\n<li>Create a generic Jupyter Notebook that accepts a list of inspections and automatically classifies them\n<ol>\n<li>Discuss how the error is extracted</li>\n<li>Study buildlog-parser, think of its reusability [6]</li>\n</ol>\n</li>\n<li>Discuss correctness and applicability of the proposed solution</li>\n</ol>\n<h2>Stretch goals:</h2>\n<ul>\n<li>Study solver workflow and how it works in Thoth deployment, try to come up with a design on how to integrate your solution into solver workflow</li>\n<li>Integrate your solution into solver workflow</li>\n<li>Extend error classification to classify also errors specific to Amun inspections (e.g. failed push of images)</li>\n<li>Study buildlog analysis endpoint and build analysis workflow</li>\n<li>Integrate your solution into buildlog analysis workflow</li>\n</ul>\n<h2>References</h2>\n<ol>\n<li><a href=\"https://github.com/thoth-station/solver/\">https://github.com/thoth-station/solver/</a></li>\n<li><a href=\"https://github.com/thoth-station/micropipenv\">https://github.com/thoth-station/micropipenv</a></li>\n<li><a href=\"https://www.kaggle.com/thothstation/thoth-solver-dataset-v10\">https://www.kaggle.com/thothstation/thoth-solver-dataset-v10</a></li>\n<li><a href=\"https://github.com/thoth-station/datasets\">https://github.com/thoth-station/datasets</a></li>\n<li><a href=\"https://github.com/thoth-station/amun-api/\">https://github.com/thoth-station/amun-api/</a></li>\n<li><a href=\"https://github.com/thoth-station/buildlog-parser\">https://github.com/thoth-station/buildlog-parser</a></li>\n<li><a href=\"https://github.com/thoth-station/report-processing\">https://github.com/thoth-station/report-processing</a></li>\n</ol>\n<h2>Previous attempts to learn from</h2>\n<ul>\n<li>sraghura\n<ul>\n<li><a href=\"https://bluejeans.com/playback/s/z6ZEf27gKasWfJqXtkzJYkg1YpwnBcTDLkB9TLYuU5SSgaDVi51tYIlAtyfCKDeW\">https://bluejeans.com/playback/s/z6ZEf27gKasWfJqXtkzJYkg1YpwnBcTDLkB9TLYuU5SSgaDVi51tYIlAtyfCKDeW</a></li>\n<li><a href=\"https://github.com/thoth-station/notebooks/blob/master/notebooks/development/Solver%20error%20classification.ipynb\">https://github.com/thoth-station/notebooks/blob/master/notebooks/development/Solver%20error%20classification.ipynb</a></li>\n</ul>\n</li>\n<li>skotak\n<ul>\n<li><a href=\"https://docs.google.com/document/d/1SAzyxxfXpRf7bnuuF4Eva6EXXdUcRqWhrfBOYQfiWk8/edit#\">https://docs.google.com/document/d/1SAzyxxfXpRf7bnuuF4Eva6EXXdUcRqWhrfBOYQfiWk8/edit#</a></li>\n<li><a href=\"https://docs.google.com/presentation/d/1lB4GBAvhp6ZFbafgYvBGnf1C-aTjzkXK0VrOfs_Skxo/edit#slide=id.g8c299ddf99_1_950\">https://docs.google.com/presentation/d/1lB4GBAvhp6ZFbafgYvBGnf1C-aTjzkXK0VrOfs_Skxo/edit#slide=id.g8c299ddf99_1_950</a></li>\n<li><a href=\"https://bluejeans.com/s/8UYPQ\">https://bluejeans.com/s/8UYPQ</a></li>\n<li><a href=\"https://docs.google.com/presentation/d/1bVXHEvTojSXzSlUcrRNS3DcT_NeSg0nvZcREDUIHPBs/edit#slide=id.g8c299ddf99_1_950\">https://docs.google.com/presentation/d/1bVXHEvTojSXzSlUcrRNS3DcT_NeSg0nvZcREDUIHPBs/edit#slide=id.g8c299ddf99_1_950</a></li>\n</ul>\n</li>\n</ul>","fields":{"srcLink":"https://github.com/thoth-station/core/blob/master/docs/intern-projects/classify-errors-produced-during-installation-of-python-modules.md"},"frontmatter":{"title":"","description":null}}},"pageContext":{"id":"b65d81fb-2bbe-500e-9c4a-6d3059288366","previousPostId":"bdbb8efa-0cb2-574b-b6ea-eb42e83a0b89","nextPostId":"e1e8d355-3ca4-5125-949b-fadc6373ca95"}},
    "staticQueryHashes": ["1276261476","2902925331","3000541721"]}